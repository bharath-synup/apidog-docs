---
openapi: 3.0.1
info:
  title: Abc Corp
  description: ""
  version: 1.0.0
tags:
  - name: Listings API
paths:
  /locations/TG9jYXRpb246NzAzNTY1/listings/premium:
    get:
      summary: Retrieve Premium Listings for a Location
      deprecated: false
      description: |
        This endpoint retrieves premium listings for a specified location.

        The location is identified by a unique ID included in the URL path.

        - **Authorization Required**: This endpoint requires an API key.
        - **Location ID**: Use a valid location ID in the path.
        - **API Key**: Pass API key as Bearer token in `Authorization` header.
      tags:
        - Listings API
        - L1
      parameters:
        - name: Authorization
          in: header
          description: |
            Your API key for authentication. Use the format:
            ```
            Authorization: Bearer {{api_key}}
            ```
          required: true
          example: "{{api_key}}"
          schema:
            type: string
      responses:
        "200":
          description: |
            A successful response containing the premium listings for the
            specified location.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listings:
                    type: array
                    description: A list of premium listings.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The unique identifier for the listing.
                        title:
                          type: string
                          description: The title of the premium listing.
                        url:
                          type: string
                          description: The URL of the listing.
              examples:
                "1":
                  summary: Success Example
                  value:
                    listings:
                      - id: "12345"
                        title: Premium Listing Example
                        url: https://example.com/listing/12345
        "401":
          description: Unauthorized. The request requires a valid API key.
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Location not found.
          content:
            application/json:
              schema:
                type: object
      security: []
  /locations/TG9jYXRpb246NzM0NTE=/listings/duplicates:
    get:
      summary: Get duplicate listings for location
      deprecated: false
      tags:
        - Listings API
        - Listings Copy
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: string
        - name: Authorization
          in: header
          required: false
          example: "{{api_key}}"
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      security: []
  /locations/listings/duplicates:
    get:
      summary: Duplicate Listings Rollup
      deprecated: false
      tags:
        - Listings API
        - Listings
      parameters:
        - name: Authorization
          in: header
          required: true
          example: your_api_key_here
          schema:
            type: string
      responses:
        "200":
          description: Duplicate listings retrieved successfully.
          content:
            application/json:
              schema:
                type: object
      security: []
  /locations/listings/mark-as-duplicate:
    post:
      summary: Mark as duplicate
      deprecated: false
      tags:
        - Listings API
        - Listings
      parameters:
        - name: Authorization
          in: header
          required: true
          example: your_api_key_here
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: object
                  properties:
                    locationId:
                      type: string
                    listingItemIds:
                      type: array
                      items:
                        type: string
                  required:
                    - locationId
                    - listingItemIds
            example:
              input:
                locationId: TG9jYXRpb246NzM1Mzc=
                listingItemIds:
                  - TGlzdGluZ0l0ZW06MzMzMjkyOQ==
      responses:
        "200":
          description: Listings marked as duplicate.
          content:
            application/json:
              schema:
                type: object
      security: []
  /locations/listings/mark-as-not-duplicate:
    post:
      summary: Mark as not duplicate
      deprecated: false
      tags:
        - Listings API
        - Listings
      parameters:
        - name: Authorization
          in: header
          required: true
          example: your_api_key_here
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: object
                  properties:
                    listingItemIds:
                      type: array
                      items:
                        type: string
                    locationId:
                      type: string
                  required:
                    - listingItemIds
                    - locationId
            example:
              input:
                listingItemIds:
                  - TGlzdGluZ0l0ZW06MzMzMjkzOA==
                locationId: test1
      responses:
        "200":
          description: Listings marked as not duplicate.
          content:
            application/json:
              schema:
                type: object
      security: []
  /api/v1/users:
    get:
      summary: Test Get users
      deprecated: false
      description: Retrieves a list of users.
      tags:
        - Listings API
      parameters:
        - name: limit
          in: query
          description: Specific the max number of records to return per page.
          required: false
          example: "10"
          schema:
            type: string
        - name: page
          in: query
          description: Indicate current page for results you want to retrieve.
          required: false
          example: "1"
          schema:
            type: string
      responses:
        "200":
          description: Indicates that the required number of pages are fetched.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID
              examples:
                "1":
                  summary: Success
                  value:
                    - id: 1
                      name: John Doe
                    - id: 2
                      name: Jane
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
      security: []
components:
  schemas: {}
  securitySchemes: {}
servers: []
