name: Export Individual Apidog APIs to GitHub

on:
  workflow_dispatch:
    inputs:
      api_ids:
        description: 'Comma-separated list of API endpoint IDs to export individually'
        required: true

jobs:
  export_and_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.9.8/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Set up API IDs
        id: set_api_ids
        run: |
          API_IDS="${{ github.event.inputs.api_ids }}"
          echo "API_IDS=$API_IDS" >> $GITHUB_ENV

      - name: Export Each API from Apidog
        id: export_apis
        run: |
          IFS=',' read -ra ID_ARRAY <<< "$API_IDS"
          mkdir -p exported_apis

          for ENDPOINT_ID in "${ID_ARRAY[@]}"; do
            echo "Exporting API ID: $ENDPOINT_ID"

            RESPONSE=$(curl --silent --fail --location --request POST "https://api.apidog.com/v1/projects/${{ secrets.APIDOG_PROJECT_ID }}/export-openapi" \
              --header "X-Apidog-Api-Version: 2024-03-28" \
              --header "Content-Type: application/json" \
              --header "Authorization: Bearer ${{ secrets.APIDOG_EXPORT_API_KEY }}" \
              --data "{
                \"scope\": {
                  \"type\": \"SELECTED_ENDPOINTS\",
                  \"selectedEndpointIds\": [\"$ENDPOINT_ID\"]
                },
                \"options\": {
                  \"includeApidogExtensionProperties\": false,
                  \"addFoldersToTags\": false
                },
                \"oasVersion\": \"3.1\",
                \"exportFormat\": \"YAML\"
              }")

            if [ $? -ne 0 ] || [ -z "$RESPONSE" ]; then
              echo "Error exporting API ID: $ENDPOINT_ID" >&2
              continue
            fi

            TEMP_FILE="exported_apis/temp_export_${ENDPOINT_ID}.yaml"
            echo "$RESPONSE" > "$TEMP_FILE"

            # Extract and sanitize the tag
            TAG=$(yq e '.tags[0]' "$TEMP_FILE" || echo "untagged_${ENDPOINT_ID}")
            TAG=${TAG:-"untagged_${ENDPOINT_ID}"}
            SANITIZED_TAG=$(echo "$TAG" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/_/g' | sed -E 's/^_+|_+$//g')

            FILE_NAME="exported_apis/${SANITIZED_TAG}.yaml"
            mv "$TEMP_FILE" "$FILE_NAME"
            echo "Saved API ID $ENDPOINT_ID as $FILE_NAME"
          done

      - name: Commit exported YAML files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add exported_apis/*.yaml
          git commit -m "Exported APIs: ${{ github.event.inputs.api_ids }}"
          git push
