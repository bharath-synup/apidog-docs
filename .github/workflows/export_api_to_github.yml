name: Export Individual APIs to GitHub

on:
  workflow_dispatch:
    inputs:
      api_ids:
        description: 'Comma-separated list of API IDs to export'
        required: true

jobs:
  export_and_commit:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.APIDOG_PROJECT_ID }}
      APIDOG_API_KEY: ${{ secrets.APIDOG_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Export Each API from Apidog
        id: export_apis
        run: |
          # Install jq for JSON parsing and yq for YAML parsing
          sudo apt-get update && sudo apt-get install -y jq
          sudo apt-get install -y yq

          # Read API IDs from workflow input
          IFS=',' read -ra ID_ARRAY <<< "${{ github.event.inputs.api_ids }}"

          for ENDPOINT_ID in "${ID_ARRAY[@]}"; do
            # Make the API call to export the endpoint in YAML format
            RESPONSE=$(curl --location "https://api.apidog.com/v1/projects/$PROJECT_ID/export-openapi" \
              --header "X-Apidog-Api-Version: 2024-03-28" \
              --header "Content-Type: application/json" \
              --header "Accept: application/json" \
              --header "Authorization: Bearer $APIDOG_API_KEY" \
              --data "{
                \"selectedEndpointIds\": [$ENDPOINT_ID],
                \"exportFormat\": \"YAML\"
              }")

            # Save the response to a temporary file
            TEMP_FILE="temp_export_${ENDPOINT_ID}.yaml"
            echo "$RESPONSE" > "$TEMP_FILE"

            # Extract the endpoint path and last two fields
            PATH_FIELD=$(yq e 'paths | keys | .[0]' "$TEMP_FILE")
            if [ -z "$PATH_FIELD" ] || [ "$PATH_FIELD" = "null" ]; then
              echo "No valid endpoint path found for ID $ENDPOINT_ID. Skipping."
              continue
            fi

            # Parse the last two segments of the path
            SEGMENTS=$(echo "$PATH_FIELD" | awk -F'/' '{print $(NF-1)"_"$NF}')
            if [ -z "$SEGMENTS" ]; then
              SEGMENTS="untagged_${ENDPOINT_ID}"
            fi

            # Construct the file name using the extracted segments
            FILE_NAME="${SEGMENTS}_endpoint_${ENDPOINT_ID}.yaml"

            # Move the temporary file to the final named file
            mv "$TEMP_FILE" "$FILE_NAME"
          done

      - name: Commit exported YAML files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Add each exported YAML file to Git
          for FILE in *_endpoint_*.yaml; do
            git add "$FILE"
          done

          git commit -m "Exported individual APIs from Apidog"
          git push
